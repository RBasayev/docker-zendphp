#!/bin/bash

function usage(){
    ext_help="$(zendphp-extensions.sh help | sed -e "s|zendphp-extensions.sh|$(basename $0) EXT|g" -e 's/^/|   /g')"
    pickle_help="$(zendphp-pickle-tool.sh help | sed -e "s|zendphp-pickle-tool.sh|$(basename $0) PICKLE|g" -e 's/^/|   /g')"
    cat <<EOU

This script helps with the most common ZendPHP management tasks.

Usage: $(basename $0) <subcommand> <parameters>

Subcommands:
  - EXT | ext | extensions
|-----------------------------------------------------------------
$ext_help
|-----------------------------------------------------------------

  - PICKLE | pickle
|-----------------------------------------------------------------
$pickle_help
|-----------------------------------------------------------------

  - COMPOSER | getcomposer | installcomposer
|-----------------------------------------------------------------
|   Install Composer into the specified directory.
|
|   Example:
|      # $(basename $0) getcomposer /usr/local/bin
|
|   The specified directory must exist before the installation.
|-----------------------------------------------------------------


EOU
}

# shellcheck source=./ZendPHP-Common.lib
. $(command -v ZendPHP-Common.lib)

function zcomposer(){
    [[ ! -d "$1" ]] && panic 1 "The specified installation directory doesn't exist:\n  '$1' (or maybe it's not a directory)"
    curl -sS https://getcomposer.org/installer | php -- --install-dir="$1" --filename=composer
}

case "$1" in
    COMPOSER|getcomposer|installcomposer)
        zcomposer "$2"
        ;;
    EXT|ext|extensions)
        shift
        [[ ${#@} -gt 1 ]] || panic 1 "Not enough parameters for the EXT script, please review help."
        zendphp-extensions.sh $@
        ;;
    PICKLE|pickle)
        shift
        [[ ${#@} -gt 1 ]] || panic 1 "Not enough parameters for the PICKLE wrapper, please review help."
        zendphp-pickle-tool.sh $@
        ;;
    *) usage;;
esac
